name: CI/CD

on:
  push:
    branches:
      - main

env:
  FLUTTER_VERSION: "3.7.7"
  GH_REPO: "BusinessOcean/demo_cicd"
  GH_RELEASE_TAG: "v1.0.0"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Create GitHub release
        uses: actions/github-script@v4
        with:
          github-token: ${{ env.GH_TOKEN }}
          script: |
            const { data } = await octokit.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.GH_RELEASE_TAG,
              name: process.env.GH_RELEASE_TAG,
              body: `Release ${process.env.GH_RELEASE_TAG}`,
              draft: false,
              prerelease: false
            });
            const { id } = data;
            await octokit.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: id,
              name: 'my-app.apk',
              data: Buffer.from(require('fs').readFileSync('./build/app/outputs/flutter-apk/app-release.apk'))
            });
