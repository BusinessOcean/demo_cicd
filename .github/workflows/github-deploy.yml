name: CI/CD

on:
  push:
    branches:
      - main

env:
  FLUTTER_VERSION: "3.7.7"
  GH_REPO: "BusinessOcean/demo_cicd"
  GH_RELEASE_TAG: "v1.0.0"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}

jobs:
  build:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release
      # - name: Install CocoaPods
      #   run: sudo gem install cocoapods
      # - name: Build IPA
      #   run: |
      #     cd ios/
      #     pod install
      #     xcodebuild clean archive -workspace Runner.xcworkspace -scheme Runner -configuration Release -archivePath Runner.xcarchive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Install octokit/rest
        run: npm install @octokit/rest

      - name: Create GitHub release
        uses: actions/github-script@v4
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({
              auth: "${{ env.GITHUB_TOKEN }}",
            });
            const { data } = await octokit.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ env.GH_RELEASE_TAG }}",
              name: "${{ env.GH_RELEASE_TAG }}",
              body: `Release ${{ env.GH_RELEASE_TAG }}`,
              draft: false,
              prerelease: false
            });
            const { id } = data;
            await octokit.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: id,
              name: 'demo-cicd.apk',
              data: Buffer.from(require('fs').readFileSync('./build/app/outputs/flutter-apk/app-release.apk'))
            });
            # await octokit.repos.uploadReleaseAsset({
            #   owner: context.repo.owner,
            #   repo: context.repo.repo,
            #   release_id: id,
            #   name: 'my-app.ipa',
            #   data: Buffer.from(require('fs').readFileSync('./ios/Runner.xcarchive/Products/Applications/Runner.ipa'))
            # });
